(()=>{"use strict";(()=>{const{compressX64:t,decompressX64:e}=shapez,{SerializerInternal:o}=shapez,{gBuildingVariants:n}=shapez,i=">>>",r="<<<",a=["uncolored","blue","green","cyan","red","purple","yellow","white"],s=["C","R","W","S"],l={"v0-b64":{id:"0",b64:!0,bcb:!0},"v0-compress":{id:"1",compress:!0,bcb:!0},"v1-b64":{id:"2",b64:!0,symbols:!0,bcb:!0},"v1-compress":{id:"3",compress:!0,symbols:!0,bcb:!0},"v2-b64":{id:"4",b64:!0,symbols:!0},"v2-compress":{id:"5",compress:!0,symbols:!0}};class c{constructor(){this.symbolTable=[],this.configTable={};for(let t of Object.values(l))this.configTable[t.id]=t}getCode(t){if("number"==typeof t&&Number.isInteger(t)&&0!=t)return[t];let e=[0];const o=this.symbolTable.indexOf(t);return o<0?(e.push(this.symbolTable.length),this.symbolTable.push(t)):e.push(o),e}packEntities(e){this.symbolTable=[];let o=e.reduce(((t,e)=>[Math.min(t[0],e.components.StaticMapEntity.origin.x),Math.min(t[1],e.components.StaticMapEntity.origin.y)]),[1/0,1/0]),n=[];e.forEach((t=>{let e=t.components.StaticMapEntity,i=e.origin.x-o[0],r=e.origin.y-o[1],a=i/16|0,s=r/16|0,l=n.find((t=>t[0][0]===a&&t[0][1]===s));l||(l=[[a,s]],n.push(l));const c=this.getCode(e.code);let d=[i%16<<4|r%16,e.rotation/90<<4|e.originalRotation/90,...c],p=[];31===e.code&&(p=this.writeValue(t.components.ConstantSignal.signal.data,t.components.ConstantSignal.signal.$)),l.push([...d,...p])})),n.forEach((t=>t[0].push(t.length-2)));let a="";console.debug("##### symbols:",this.symbolTable);const s=this.symbolTable.join("\0"),c=s.length;a+=String.fromCharCode(c>>>8,255&c),a+=s,a+=String.fromCharCode(...n.flat(1/0));let d=t(a),p=btoa(a);a=i,d.length<p.length?a+=l["v2-compress"].id+d:a+=l["v2-b64"].id+p,a+=r;let h="";const m=Math.floor(a.length/64)+1;for(let t=0;t<m;t++){const e=64*t;h+=a.substring(e,e+64)+"\n"}return h}unpackEntities(t,a){if(!(a=a.replaceAll(/[\r\n]/,"")).startsWith(i)||!a.endsWith(r))throw"Not a blueprint string";const s=a.charAt(i.length);let l=a.substring(i.length+1,a.length-r.length);const c=this.configTable[s];if(!c)throw`Unknown blueprint string format: ${s}`;c.b64&&(l=atob(l)),c.compress&&(l=e(l));let d=0,p=[];if(c.symbols){const t=l.charCodeAt(d++)<<8|l.charCodeAt(d++);p=l.substring(d,d+t).split("\0"),console.debug("##### symbols:",p),d+=t}let h=[0,0],m=[];for(;d<l.length;){let t=l.charCodeAt(d++),e=l.charCodeAt(d++),o=l.charCodeAt(d++);c.bcb||o++;for(let i=0;i<o;i++){let o=l.charCodeAt(d++),i=l.charCodeAt(d++),r=l.charCodeAt(d++);if(c.symbols&&0==r&&(r=p[l.charCodeAt(d++)]),!n[r]){console.log("Skip building:",r);continue}let a={uid:0,components:{StaticMapEntity:{origin:{x:(o>>4&15)+16*t,y:(15&o)+16*e},rotation:90*(i>>4&15),originalRotation:90*(15&i),code:r}}};31===r&&([a.components.ConstantSignal,d]=this.readValue(l,d)),h=[Math.max(h[0],a.components.StaticMapEntity.origin.x),Math.max(h[1],a.components.StaticMapEntity.origin.y)],m.push(a)}}return m.map((e=>{e.components.StaticMapEntity.origin.x-=h[0]/2|0,e.components.StaticMapEntity.origin.y-=h[1]/2|0;const n=(new o).deserializeEntityNoPlace(t,e);if("string"==typeof n)throw new Error(n);return n}))}writeValue(t,e){if("boolean_item"===e)return[1&t];if("color"===e)return[7&a.indexOf(t)|8];if("shape"===e){t=(t=t.replaceAll(":","")).padEnd(t.length>8?32:16,"-").match(/(.{2})/g);let e=[];for(let o=0;o<t.length;o++){const n=Math.floor(o/8);e[n]=e[n]<<1|"--"!==t[o]}t=t.filter((t=>"--"!==t));let o=[],n=0;for(let e=0;e<t.length;e++){const i=s.indexOf(t[e].charAt(0)),r=a.findIndex((o=>o.startsWith(t[e].charAt(1))))<<2|i,l=Math.floor(n/8),c=n%8-3;o[l]|=c<0?r<<-c:r>>c,c>0&&(o[l+1]|=r<<8-c&255),n+=5}return[...e,...o]}}readValue(t,e){let o=t.charCodeAt(e++);if(0==(248&o))return[{signal:{$:"boolean_item",data:o}},e];if(8==(248&o))return[{signal:{$:"color",data:a[7&o]}},e];o<<=8,3840&o&&(o+=t.charCodeAt(e++));const n=new Array(16);let i=0,r=0;for(let l=0;l<16;l++)if(o>>15-l&1){r<5&&(i|=t.charCodeAt(e++)<<4-r,r+=8);let o=i>>7&31;i<<=5,r-=5;let c=s[3&o],d=a[o>>2&7].charAt(0);n[l]=c+d}else n[l]="--";let l=[];for(let t=0;t<16;t+=4){let e=n.slice(t,t+4).join("");"--------"!==e&&l.push(e)}return[{signal:{$:"shape",data:l.join(":")}},e]}}const d=JSON.parse('{"id":"bp-string","name":"Blueprint strings","author":"FatcatX and SkimnerPhi","version":"1.5.0","description":"Generate a sharable string in the system clipboard when you copy and paste blueprints.","website":"https://github.com/garretsimpson/shapez-mods","minimumGameVersion":">=1.5.0","doesNotAffectSavegame":true,"entry":"./index.js"}'),{Vector:p}=shapez,{getBuildingDataFromCode:h}=shapez,{HUDBlueprintPlacer:m}=shapez,{Mod:u}=shapez,{Blueprint:b}=shapez,{SerializerInternal:g}=shapez,y=({$old:t})=>({createBlueprintFromBuildings(...e){t.createBlueprintFromBuildings.call(this,...e),C.copyToClipboard(this.currentBlueprint.get())},pasteBlueprint(...e){const o=C.pasteFromClipboard(this.root);this.lastBlueprintUsed=o||this.lastBlueprintUsed,t.pasteBlueprint.call(this,...e)}}),f=()=>({deserializeEntityNoPlace(t,e){const o=e.components.StaticMapEntity;window.assert(o,"entity has no static data");const n=o.code,i=h(n),r=i.metaInstance.createEntity({root:t,origin:p.fromSerializedObject(o.origin),rotation:o.rotation,originalRotation:o.originalRotation,rotationVariant:i.rotationVariant,variant:i.variant});return r.uid=e.uid,this.deserializeComponents(t,r,e.components)||r}});class C extends u{static serializeOld(t){let e=(new g).serializeEntityArray(t);for(let t of e)delete t.uid,delete t.components.WiredPins,delete t.components.ItemEjector,delete t.components.ItemProcessor,delete t.components.UndergroundBelt;return e}static serialize(t){const e=(new g).serializeEntityArray(t);return(new c).packEntities(e)}static deserialize(t,e){const o=(new c).unpackEntities(t,e);return new b(o)}static async copyToClipboard(t){const e=C.serialize(t.entities);console.debug("Copy to clipboard:",e);try{await navigator.clipboard.writeText(e),console.debug("Copied blueprint to clipboard")}catch(t){console.error("Copy to clipboard failed:",t.message)}}static pasteFromClipboard(t){let e;try{const o=C.getClipboard().trim();console.debug("Received data from clipboard:",o),e=C.deserialize(t,o)}catch(t){console.error("Paste from clipboard failed:",t)}return e}static getClipboard(){var t=document.createElement("div");t.contentEditable=!0;var e=document.activeElement.appendChild(t).parentNode;t.focus(),document.execCommand("Paste",null,null);var o=t.innerText;return e.removeChild(t),o}init(){console.debug("##### Init mod:",d.id),this.modInterface.extendClass(g,f),this.modInterface.extendClass(m,y)}}var E,w;E=C,delete(w=d).entry,window.$shapez_registerMod(E,w)})()})();
(()=>{"use strict";(()=>{const{compressX64:t,decompressX64:e}=shapez,{SerializerInternal:n}=shapez,{gBuildingVariants:o}=shapez,s=">>>",i="<<<",a=["uncolored","blue","green","cyan","red","purple","yellow","white"],r=["C","R","W","S"],l="\0",c={"v0-b64":{id:"0",b64:!0,bcb:!0},"v0-compress":{id:"1",compress:!0,bcb:!0},"v1-b64":{id:"2",b64:!0,symbols:!0,bcb:!0},"v1-compress":{id:"3",compress:!0,symbols:!0,bcb:!0},"v2-b64":{id:"4",b64:!0,symbols:!0},"v2-compress":{id:"5",compress:!0,symbols:!0},"v3-b64":{id:"6",b64:!0,symbols:!0,state:!0},"v3-compress":{id:"7",compress:!0,symbols:!0,state:!0}};class h{constructor(){this.configTable={};for(let t of Object.values(c))this.configTable[t.id]=t;this.symbolTable=[]}clearStateTables(){this.stateTable=[],this.constantSignalTable=[]}getTableData(){let t,e,n="";return t=this.stateTable.join(l),e=t.length,n+=String.fromCharCode(e>>>8,255&e),n+=t,t=this.constantSignalTable.join(""),e=t.length,n+=String.fromCharCode(e>>>8,255&e),n+=t,n}dedup(t,e){let n;const o=t.indexOf(e);return o<0?(n=t.length,t.push(e)):n=o,n}setSymbolTable(t,e){const n=t.charCodeAt(e++)<<8|t.charCodeAt(e++);return this.symbolTable=t.substring(e,e+n).split(l),console.debug("##### symbols:",this.symbolTable),n+2}setStateTable(t,e){const n=t.charCodeAt(e++)<<8|t.charCodeAt(e++);return this.stateTable=t.substring(e,e+n).split(l),console.debug("##### state:",this.stateTable),n+2}setConstantSignalTable(t,e){const n=t.charCodeAt(e++)<<8|t.charCodeAt(e++),o=e+n;let s;for(this.constantSignalTable=[];e<o;)[s,e]=this.unpackConstantSignal(t,e),this.constantSignalTable.push(s);return console.debug("##### signals:",this.constantSignalTable),n+2}getCode(t){return"number"==typeof t&&Number.isInteger(t)&&0!=t?[t]:[0,this.dedup(this.symbolTable,t)]}packEntities(t){this.check(t);const e=this.chunkIt(t);let n="";return e.forEach((t=>{const e=[];e.push(t.idX,t.idY),e.push(t.data.length-1),this.clearStateTables(),t.data.forEach((t=>{const n=t.x<<4|t.y,o=t.entity.components.StaticMapEntity,s=o.rotation/90<<4|o.originalRotation/90,i=this.getCode(o.code);e.push(n,s,...i);const a=this.getState(t.entity);e.push(...a)})),n+=String.fromCharCode(...e),n+=this.getTableData()})),this.format(n)}check(t){const e=new Error("Invalid blueprint data");if("object"!=typeof t||!Array.isArray(t))throw e;for(let n of t){if(!n.components||!n.components.StaticMapEntity)throw e;const t=n.components.StaticMapEntity;if(!t.code||!t.origin)throw e}}chunkIt(t){const e=t.map((t=>t.components.StaticMapEntity.origin.x)).reduce(((t,e)=>Math.min(t,e))),n=t.map((t=>t.components.StaticMapEntity.origin.y)).reduce(((t,e)=>Math.min(t,e))),o=[];return t.forEach((t=>{const s=t.components.StaticMapEntity.origin,i=s.x-e,a=s.y-n,r=i/16|0,l=a/16|0;let c=o.find((t=>t.idX==r&&t.idY==l));c||(c={idX:r,idY:l},c.data=[],o.push(c));const h={x:i%16,y:a%16,entity:t};c.data.push(h)})),o}getState(t){const e=[],n=t.components,o=Object.entries(n);for(let[t,s]of o){const o={};if(s.copyAdditionalStateTo(o),0==Object.keys(o).length)continue;const i=this.dedup(this.symbolTable,t),a=n[t].serialize(),r=this["pack"+t];let l;l=r?r.call(this,a):this.dedup(this.stateTable,a),e.push([i,l])}return[e.length,...e.flat()]}format(e){let n="";console.debug("##### symbols:",this.symbolTable);const o=this.symbolTable.join(l),a=o.length;n+=String.fromCharCode(a>>>8,255&a),n+=o,n+=e;let r=t(n),h=btoa(n),d=s;r.length<h.length?d+=c["v3-compress"].id+r:d+=c["v3-b64"].id+h,d+=i;const p=new RegExp(".{1,64}","g");return d=d.match(p).join("\n"),d}unpackEntities(t,a){if(!a.startsWith(s)||!a.endsWith(i))throw"Not a blueprint string";const r=a.charAt(s.length);let l=a.substring(s.length+1,a.length-i.length);const c=this.configTable[r];if(!c)throw`Unknown blueprint string format: ${r}`;c.b64&&(l=atob(l)),c.compress&&(l=e(l));let h=0;c.symbols&&(h+=this.setSymbolTable(l,h));const d={x:0,y:0},p=[];for(;h<l.length;){const t=l.charCodeAt(h++),e=l.charCodeAt(h++);let n=l.charCodeAt(h++);c.bcb||n++;const s=[];for(let i=0;i<n;i++){const n=l.charCodeAt(h++),i=l.charCodeAt(h++);let a=l.charCodeAt(h++);if(c.symbols&&0==a&&(a=this.symbolTable[l.charCodeAt(h++)]),!o[a]){console.log("Skip building:",a);continue}const r={uid:0,components:{StaticMapEntity:{origin:{x:(n>>4&15)+16*t,y:(15&n)+16*e},rotation:90*(i>>4&15),originalRotation:90*(15&i),code:a}}};if(!c.state&&31==a){const t="ConstantSignal",e=this["unpack"+t];[r.components[t],h]=e.call(this,l,h)}if(c.state){const t=l.charCodeAt(h++);for(let e=0;e<t;e++){const t=l.charCodeAt(h++),e=l.charCodeAt(h++),n=this.symbolTable[t];r.components[n]={sidx:e}}}d.x=Math.max(d.x,r.components.StaticMapEntity.origin.x),d.y=Math.max(d.y,r.components.StaticMapEntity.origin.y),s.push(r)}if(c.state){h+=this.setStateTable(l,h),h+=this.setConstantSignalTable(l,h);for(let t of s){const e=Object.entries(t.components);for(let[n,o]of e){const e=o.sidx;let s;switch(n){case"StaticMapEntity":continue;case"ConstantSignal":s=this.constantSignalTable[e];break;case"Lever":s=this.unpackLever(e);break;default:s=JSON.parse(this.stateTable[e])}t.components[n]=s}}}p.push(...s)}return p.map((e=>{const o=e.components.StaticMapEntity.origin;o.x-=d.x/2|0,o.y-=d.y/2|0;const s=(new n).deserializeEntityNoPlace(t,e);if("string"==typeof s)throw new Error(s);return s}))}checkConstantSignal(t){const e=t.signal;if(!e)return!1;if(!/^(?:boolean_item|color|shape)$/.test(e.$))return!1;const n=a.join("|"),o=r.join("")+a.map((t=>t[0])).join("")+"\\-\\:";return!!new RegExp(`^(?:[01]|${n}|[${o}]{8,35})$`).test(e.data)}packConstantSignal(t){let e,n;if(this.checkConstantSignal(t))n=this.packSignalValue(t.signal);else{const t=JSON.stringify(t);n=[2,this.dedup(this.stateTable,t)]}return n=String.fromCharCode(...n),e=this.dedup(this.constantSignalTable,n),e}packSignalValue(t){const e=t.$;let n=t.data;if("boolean_item"===e)return[1&n];if("color"===e)return[7&a.indexOf(n)|8];if("shape"===e){n=n.replaceAll(":",""),n=n.padEnd(n.length>8?32:16,"-").match(/(.{2})/g);let t=[];for(let e=0;e<n.length;e++){const o=Math.floor(e/8);t[o]=t[o]<<1|"--"!==n[e]}n=n.filter((t=>"--"!==t));let e=[],o=0;for(let t=0;t<n.length;t++){const s=r.indexOf(n[t].charAt(0)),i=a.findIndex((e=>e.startsWith(n[t].charAt(1))))<<2|s,l=Math.floor(o/8),c=o%8-3;e[l]|=c<0?i<<-c:i>>c,c>0&&(e[l+1]|=i<<8-c&255),o+=5}return[...t,...e]}}unpackConstantSignal(t,e){let n,o,s=t.charCodeAt(e++);if(2===s){const n=t.charCodeAt(e++);return o=this.stateTable[n],[JSON.parse(o),e]}if(0==(254&s))n="boolean_item",o=s;else if(8==(248&s))n="color",o=a[7&s];else{s<<=8,3840&s&&(s+=t.charCodeAt(e++));const i=new Array(16);let l=0,c=0;for(let n=0;n<16;n++)if(s>>15-n&1){c<5&&(l|=t.charCodeAt(e++)<<4-c,c+=8);let o=l>>7&31;l<<=5,c-=5;const s=r[3&o],h=a[o>>2&7].charAt(0);i[n]=s+h}else i[n]="--";const h=[];for(let t=0;t<16;t+=4){let e=i.slice(t,t+4).join("");"--------"!==e&&h.push(e)}n="shape",o=h.join(":")}return[{signal:{$:n,data:o}},e]}checkLever(t){const e=t.toggled;return e&&"boolean"==typeof e}packLever(t){return t.toggled?1:0}unpackLever(t){return{toggled:1===t}}}const d=JSON.parse('{"id":"bp-string","name":"Blueprint strings","author":"FatcatX and SkimnerPhi","version":"1.7.0","website":"https://github.com/garretsimpson/shapez-mods","description":"Generate a sharable string in the system clipboard when you copy and paste blueprints.","minimumGameVersion":">=1.5.0","settings":{"mode":"pack"},"doesNotAffectSavegame":true,"modId":"1779764","entry":"./index.js"}'),{Vector:p}=shapez,{getBuildingDataFromCode:b}=shapez,{HUDBlueprintPlacer:u}=shapez,{Mod:g}=shapez,{Blueprint:m}=shapez,{SerializerInternal:f}=shapez,{HUDSandboxController:y}=shapez,C=()=>({giveBlueprints(){["CbCbCbRb:CwCwCwCw","Sb----Sb:CbCbCbCb:--CwCw--","Sb----Sb:3b3b3b3b:--3w3w--","SbSbSbSb:1b1b1b1b:--CwCw--"].forEach((t=>{this.root.hubGoals.storedShapes[t]||(this.root.hubGoals.storedShapes[t]=0),this.root.hubGoals.storedShapes[t]+=1e3}))}}),S=({$old:t})=>({createBlueprintFromBuildings(...e){t.createBlueprintFromBuildings.call(this,...e),T.copyToClipboard(this.currentBlueprint.get())},pasteBlueprint(...e){const n=T.pasteFromClipboard(this.root);this.lastBlueprintUsed=n||this.lastBlueprintUsed,t.pasteBlueprint.call(this,...e)}}),w=()=>({deserializeEntityNoPlace(t,e){const n=e.components.StaticMapEntity;window.assert(n,"entity has no static data");const o=n.code,s=b(o),i=s.metaInstance.createEntity({root:t,origin:p.fromSerializedObject(n.origin),rotation:n.rotation,originalRotation:n.originalRotation,rotationVariant:s.rotationVariant,variant:s.variant});return i.uid=e.uid,this.deserializeComponents(t,i,e.components)||i}});class T extends g{static serializeAsJson(t){const e=[];for(let n of t){if(n.queuedForDestroy||n.destroyed)continue;const t=n.serialize();delete t.uid;const o=Object.entries(n.components);for(let[e,n]of o){const o={};n.copyAdditionalStateTo(o),"StaticMapEntity"==e||Object.keys(o).length>0||delete t.components[e]}e.push(t)}return JSON.stringify(e)}static deserializeJson(t,e){const n=JSON.parse(e);if("object"!=typeof n)return;if(!Array.isArray(n))return;const o=new f,s=[];for(let e=0;e<n.length;++e){const i=n[e];if(!i.components||!i.components.StaticMapEntity)return;const a=i.components.StaticMapEntity;if(!a.code||!a.origin)return;const r=o.deserializeEntityNoPlace(t,i);if("string"==typeof r)throw new Error(r);s.push(r)}return s}static serialize(t){const e=d.settings.mode;let n="";switch(e){case"json":n=T.serializeAsJson(t);break;case"pack":n=(new h).packEntities(t);break;default:throw`Unknown blueprint string mode: ${e}`}return n}static deserialize(t,e){let n;try{if(n=T.deserializeJson(t,e),!n)throw"Unable to parse blueprint string as JSON"}catch(o){n=(new h).unpackEntities(t,e)}return n}static async copyToClipboard(t){try{const e=T.serialize(t.entities);console.debug("Copy to clipboard:",e),await navigator.clipboard.writeText(e),console.debug("Copied blueprint to clipboard")}catch(t){console.error("Copy to clipboard failed:",t)}}static pasteFromClipboard(t){const e=/[\r\n\u00A0]/;let n,o;try{n=T.getClipboard().trim(),console.debug("Received data from clipboard:",n),n=n.replaceAll(e,"");const s=T.deserialize(t,n);if(!s)throw"Unable to parse blueprint string";o=new m(s)}catch(t){console.error("Paste from clipboard failed:",t)}return o}static getClipboard(){var t=document.createElement("div");t.contentEditable=!0;var e=document.activeElement.appendChild(t).parentNode;t.focus(),document.execCommand("Paste",null,null);var n=t.innerText;return e.removeChild(t),n}initSandbox(){this.modInterface.registerHudElement("sandboxController",y),this.modInterface.extendClass(y,C)}init(){console.debug("##### Init mod:",d.id),this.initSandbox(),this.modInterface.extendClass(f,w),this.modInterface.extendClass(u,S)}}var A,E;A=T,delete(E=d).entry,window.$shapez_registerMod(A,E)})()})();